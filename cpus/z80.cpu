<!--
This file is part of Codemancer.
Copyright 2014 Graham Shaw.
Distribution and modification are permitted within the terms of the
GNU General Public License (version 3 or any later version).
-->

<!--
Note: 0x76 currently decodes incorrectly as LD (HL),(HL).
-->

<cpudl>
 <define name="reg8">
  <fragment>
   <pattern>
    <const>000</const>
   </pattern>
   <phrase>
    <literal>B</literal>
   </phrase>
   <effect>
    <register name="B"/>
   </effect>
  </fragment>

  <fragment>
   <pattern>
    <const>100</const>
   </pattern>
   <phrase>
    <literal>C</literal>
   </phrase>
   <effect>
    <register name="C"/>
   </effect>
  </fragment>

  <fragment>
   <pattern>
    <const>010</const>
   </pattern>
   <phrase>
    <literal>D</literal>
   </phrase>
   <effect>
    <register name="D"/>
   </effect>
  </fragment>

  <fragment>
   <pattern>
    <const>110</const>
   </pattern>
   <phrase>
    <literal>E</literal>
   </phrase>
   <effect>
    <register name="E"/>
   </effect>
  </fragment>

  <fragment>
   <pattern>
    <const>001</const>
   </pattern>
   <phrase>
    <literal>H</literal>
   </phrase>
   <effect>
    <register name="H"/>
   </effect>
  </fragment>

  <fragment>
   <pattern>
    <const>101</const>
   </pattern>
   <phrase>
    <literal>L</literal>
   </phrase>
   <effect>
    <register name="L"/>
   </effect>
  </fragment>

  <fragment>
   <pattern>
    <const>011</const>
   </pattern>
   <phrase>
    <literal>(HL)</literal>
   </phrase>
   <effect>
    <memory>
     <register name="HL"/>
    </memory>
   </effect>
  </fragment>

  <fragment>
   <pattern>
    <const>111</const>
   </pattern>
   <phrase>
    <literal>A</literal>
   </phrase>
   <effect>
    <register name="A"/>
   </effect>
  </fragment>
 </define>

 <define name="add">
  <fragment>
   <pattern>
    <const>000</const>
   </pattern>
   <phrase>
    <literal>ADD</literal>
   </phrase>
  </fragment>
 </define>

 <define name="adc">
  <fragment>
   <pattern>
    <const>100</const>
   </pattern>
   <phrase>
    <literal>ADC</literal>
   </phrase>
  </fragment>
 </define>

 <define name="sub">
  <fragment>
   <pattern>
    <const>010</const>
   </pattern>
   <phrase>
    <literal>SUB</literal>
   </phrase>
  </fragment>
 </define>

 <define name="sbc">
  <fragment>
   <pattern>
    <const>110</const>
   </pattern>
   <phrase>
    <literal>SBC</literal>
   </phrase>
  </fragment>
 </define>

 <define name="and">
  <fragment>
   <pattern>
    <const>001</const>
   </pattern>
   <phrase>
    <literal>AND</literal>
   </phrase>
  </fragment>
 </define>

 <define name="xor">
  <fragment>
   <pattern>
    <const>101</const>
   </pattern>
   <phrase>
    <literal>XOR</literal>
   </phrase>
  </fragment>
 </define>

 <define name="or">
  <fragment>
   <pattern>
    <const>011</const>
   </pattern>
   <phrase>
    <literal>OR</literal>
   </phrase>
  </fragment>
 </define>

 <define name="cp">
  <fragment>
   <pattern>
    <const>111</const>
   </pattern>
   <phrase>
    <literal>CP</literal>
   </phrase>
  </fragment>
 </define>

 <define name="inc">
  <fragment>
   <pattern>
    <const>0</const>
   </pattern>
   <phrase>
    <literal>INC</literal>
   </phrase>
  </fragment>
 </define>

 <define name="dec">
  <fragment>
   <pattern>
    <const>1</const>
   </pattern>
   <phrase>
    <literal>DEC</literal>
   </phrase>
  </fragment>
 </define>

 <start>
  <fragment>
   <var name="rs">
    <ref name="reg8"/>
   </var>
   <var name="rd">
    <ref name="reg8"/>
   </var>
   <pattern>
    <ref name="rs"/>
    <ref name="rd"/>
    <const>10</const>
   </pattern>
   <phrase>
    <literal>LD</literal>
   </phrase>
   <phrase>
    <ref name="rd"/>
    <literal>,</literal>
    <ref name="rs"/>
   </phrase>
   <effect>
    <assign>
     <ref name="rd"/>
     <ref name="rs"/>
    </assign>
   </effect>
  </fragment>

  <fragment>
   <var name="r">
    <ref name="reg8"/>
   </var>
   <var name="opcode">
    <ref name="add"/>
    <ref name="adc"/>
    <ref name="sbc"/>
   </var>
   <pattern>
    <ref name="r"/>
    <ref name="opcode"/>
    <const>01</const>
   </pattern>
   <phrase>
    <ref name="opcode"/>
   </phrase>
   <phrase>
    <literal>A,</literal>
    <ref name="r"/>
   </phrase>
  </fragment>

  <fragment>
   <var name="r">
    <ref name="reg8"/>
   </var>
   <var name="opcode">
    <ref name="sub"/>
    <ref name="and"/>
    <ref name="xor"/>
    <ref name="or"/>
    <ref name="cp"/>
   </var>
   <pattern>
    <ref name="r"/>
    <ref name="opcode"/>
    <const>01</const>
   </pattern>
   <phrase>
    <ref name="opcode"/>
   </phrase>
   <phrase>
    <ref name="r"/>
   </phrase>
  </fragment>

  <fragment>
   <var name="r">
    <ref name="reg8"/>
   </var>
   <var name="opcode">
    <ref name="inc"/>
    <ref name="dec"/>
   </var>
   <pattern>
    <ref name="opcode"/>
    <const>01</const>
    <ref name="r"/>
    <const>00</const>
   </pattern>
   <phrase>
    <ref name="opcode"/>
   </phrase>
   <phrase>
    <ref name="r"/>
   </phrase>
  </fragment>

  <fragment>
   <var name="r">
    <ref name="reg8"/>
   </var>
   <var name="imm">
    <integer size="8"/>
   </var>
   <pattern>
    <const>011</const>
    <ref name="r"/>
    <const>00</const>
    <ref name="imm"/>
   </pattern>
   <phrase>
    <literal>LD</literal>
   </phrase>
   <phrase>
    <ref name="r"/>
    <literal>,</literal>
    <ref name="imm"/>
   </phrase>
   <effect>
    <assign>
     <ref name="r"/>
     <ref name="imm"/>
    </assign>
   </effect>
  </fragment>
 </start>
</cpudl>
